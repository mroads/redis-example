const LZString = (function () {
    function o (o, r) { if (!t[o]) { t[o] = {}; for (let n = 0; n < o.length; n++)t[o][o.charAt(n)] = n } return t[o][r] } var r = String.fromCharCode,
      n = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
      e = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$',
      t = {},
      i = { compressToBase64 (o) { if (o == null) return ''; const r = i._compress(o, 6, (o) => n.charAt(o)); switch (r.length % 4) { default:case 0:return r; case 1:return `${r}===`; case 2:return `${r}==`; case 3:return `${r}=` } },
        decompressFromBase64 (r) { return r == null ? '' : r == '' ? null : i._decompress(r.length, 32, (e) => o(n, r.charAt(e))) },
        compressToUTF16 (o) { return o == null ? '' : `${i._compress(o, 15, (o) => r(o + 32))} ` },
        decompressFromUTF16 (o) { return o == null ? '' : o == '' ? null : i._decompress(o.length, 16384, (r) => o.charCodeAt(r) - 32) },
        compressToUint8Array (o) { for (var r = i.compress(o), n = new Uint8Array(2 * r.length), e = 0, t = r.length; t > e; e++) { const s = r.charCodeAt(e); n[2 * e] = s >>> 8, n[2 * e + 1] = s % 256 } return n },
        decompressFromUint8Array (o) { if (o === null || void 0 === o) return i.decompress(o); for (var n = new Array(o.length / 2), e = 0, t = n.length; t > e; e++)n[e] = 256 * o[2 * e] + o[2 * e + 1]; const s = []; return n.forEach((o) => { s.push(r(o)) }), i.decompress(s.join('')) },
        compressToEncodedURIComponent (o) { return o == null ? '' : i._compress(o, 6, (o) => e.charAt(o)) },
        decompressFromEncodedURIComponent (r) { return r == null ? '' : r == '' ? null : (r = r.replace(/ /g, '+'), i._decompress(r.length, 32, (n) => o(e, r.charAt(n)))) },
        compress (o) { return i._compress(o, 16, (o) => r(o)) },
        _compress (o, r, n) {
          if (o == null) return ''; let e,
            t,
            i,
            s = {},
            p = {},
            u = '',
            c = '',
            a = '',
            l = 2,
            f = 3,
            h = 2,
            d = [],
            m = 0,
            v = 0; for (i = 0; i < o.length; i += 1) if (u = o.charAt(i), Object.prototype.hasOwnProperty.call(s, u) || (s[u] = f++, p[u] = !0), c = a + u, Object.prototype.hasOwnProperty.call(s, c))a = c; else { if (Object.prototype.hasOwnProperty.call(p, a)) { if (a.charCodeAt(0) < 256) { for (e = 0; h > e; e++)m <<= 1, v == r - 1 ? (v = 0, d.push(n(m)), m = 0) : v++; for (t = a.charCodeAt(0), e = 0; e < 8; e++)m = m << 1 | 1 & t, v == r - 1 ? (v = 0, d.push(n(m)), m = 0) : v++, t >>= 1 } else { for (t = 1, e = 0; h > e; e++)m = m << 1 | t, v == r - 1 ? (v = 0, d.push(n(m)), m = 0) : v++, t = 0; for (t = a.charCodeAt(0), e = 0; e < 16; e++)m = m << 1 | 1 & t, v == r - 1 ? (v = 0, d.push(n(m)), m = 0) : v++, t >>= 1 }l--, l == 0 && (l = Math.pow(2, h), h++), delete p[a] } else for (t = s[a], e = 0; h > e; e++)m = m << 1 | 1 & t, v == r - 1 ? (v = 0, d.push(n(m)), m = 0) : v++, t >>= 1; l--, l == 0 && (l = Math.pow(2, h), h++), s[c] = f++, a = String(u) } if (a !== '') { if (Object.prototype.hasOwnProperty.call(p, a)) { if (a.charCodeAt(0) < 256) { for (e = 0; h > e; e++)m <<= 1, v == r - 1 ? (v = 0, d.push(n(m)), m = 0) : v++; for (t = a.charCodeAt(0), e = 0; e < 8; e++)m = m << 1 | 1 & t, v == r - 1 ? (v = 0, d.push(n(m)), m = 0) : v++, t >>= 1 } else { for (t = 1, e = 0; h > e; e++)m = m << 1 | t, v == r - 1 ? (v = 0, d.push(n(m)), m = 0) : v++, t = 0; for (t = a.charCodeAt(0), e = 0; e < 16; e++)m = m << 1 | 1 & t, v == r - 1 ? (v = 0, d.push(n(m)), m = 0) : v++, t >>= 1 }l--, l == 0 && (l = Math.pow(2, h), h++), delete p[a] } else for (t = s[a], e = 0; h > e; e++)m = m << 1 | 1 & t, v == r - 1 ? (v = 0, d.push(n(m)), m = 0) : v++, t >>= 1; l--, l == 0 && (l = Math.pow(2, h), h++) } for (t = 2, e = 0; h > e; e++)m = m << 1 | 1 & t, v == r - 1 ? (v = 0, d.push(n(m)), m = 0) : v++, t >>= 1; for (;;) { if (m <<= 1, v == r - 1) { d.push(n(m)); break }v++ } return d.join('')
        },
        decompress (o) { return o == null ? '' : o == '' ? null : i._decompress(o.length, 32768, (r) => o.charCodeAt(r)) },
        _decompress (o, n, e) {
          let t,
            i,
            s,
            p,
            u,
            c,
            a,
            l,
            f = [],
            h = 4,
            d = 4,
            m = 3,
            v = '',
            w = [],
            A = { val: e(0), position: n, index: 1 }; for (i = 0; i < 3; i += 1)f[i] = i; for (p = 0, c = Math.pow(2, 2), a = 1; a != c;)u = A.val & A.position, A.position >>= 1, A.position == 0 && (A.position = n, A.val = e(A.index++)), p |= (u > 0 ? 1 : 0) * a, a <<= 1; switch (t = p) { case 0:for (p = 0, c = Math.pow(2, 8), a = 1; a != c;)u = A.val & A.position, A.position >>= 1, A.position == 0 && (A.position = n, A.val = e(A.index++)), p |= (u > 0 ? 1 : 0) * a, a <<= 1; l = r(p); break; case 1:for (p = 0, c = Math.pow(2, 16), a = 1; a != c;)u = A.val & A.position, A.position >>= 1, A.position == 0 && (A.position = n, A.val = e(A.index++)), p |= (u > 0 ? 1 : 0) * a, a <<= 1; l = r(p); break; case 2:return '' } for (f[3] = l, s = l, w.push(l); ;) { if (A.index > o) return ''; for (p = 0, c = Math.pow(2, m), a = 1; a != c;)u = A.val & A.position, A.position >>= 1, A.position == 0 && (A.position = n, A.val = e(A.index++)), p |= (u > 0 ? 1 : 0) * a, a <<= 1; switch (l = p) { case 0:for (p = 0, c = Math.pow(2, 8), a = 1; a != c;)u = A.val & A.position, A.position >>= 1, A.position == 0 && (A.position = n, A.val = e(A.index++)), p |= (u > 0 ? 1 : 0) * a, a <<= 1; f[d++] = r(p), l = d - 1, h--; break; case 1:for (p = 0, c = Math.pow(2, 16), a = 1; a != c;)u = A.val & A.position, A.position >>= 1, A.position == 0 && (A.position = n, A.val = e(A.index++)), p |= (u > 0 ? 1 : 0) * a, a <<= 1; f[d++] = r(p), l = d - 1, h--; break; case 2:return w.join('') } if (h == 0 && (h = Math.pow(2, m), m++), f[l])v = f[l]; else { if (l !== d) return null; v = s + s.charAt(0) }w.push(v), f[d++] = s + v.charAt(0), h--, s = v, h == 0 && (h = Math.pow(2, m), m++) }
        } }; return i
  }()); typeof define === 'function' && define.amd ? define(() => LZString) : typeof module !== 'undefined' && module != null && (module.exports = LZString)
  